def complete_and_close_table(tout):
    if tout:
        print(r"\end{longtable} \normalsize", file=tout)
        tout.close()
        return
    else:
        raise Exception('Expected and open file to end table in')


def outhead(cols, tout, name, cap, form=None):
    print(r"% This file was generated by opsMiles.py do not edit.")
    print(r"\tiny \begin{longtable} {", file=tout, end='')
    ncols = len(cols) - 1

    if form is None:
        print(" |p{0.22\\textwidth} ", file=tout, end='')
        for c in range(1, ncols + 1):
            print(" |r ", file=tout, end='')
        print("|} ", file=tout, )
    else:
        print(form + "} ", file=tout, end='')

    print(r"\caption{%s \label{tab:%s}}\\ " % (cap, name), file=tout)
    print(r"\hline ", file=tout)
    one = False
    for c in cols:
        if one:
            print(r"&", end='', file=tout)
        else:
            one = True
        print(r"{\bf %s}" % c, end='', file=tout)
    print(r"\\ \hline ", file=tout)
    return


def outputrow(tout, sep, sumry, key, milestone_id, due_date, lev, team, mode):
    if mode == "tex":
        key = r"\jira{"+key+"}"
        print(f"{fix_tex(sumry)}{sep}{key}{sep}{fix_tex(milestone_id)}{sep}"
              f"{due_date}{sep}{lev}{sep}{team}", file=tout)
        print(r" \\ \hline", file=tout)
    else:
        print(f"{sumry}{sep}{key}{sep}{milestone_id}{sep}{due_date}"
              f"{sep}{lev}{sep}{team}", file=tout)


def fix_tex(text):
    ret = text.replace("_", "\\_")
    ret = ret.replace("/", "/ ")
    ret = ret.replace("$", "\\$")
    ret = ret.replace("%", "\\%")
    ret = ret.replace("^", "\\^")
    return ret
